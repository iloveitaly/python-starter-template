# NOTE: for development use only, do not run this compose in production!
# ports are not exposed, instead dynamic orb domains are used
services:
  # port 5432
  postgres:
    image: postgres:18
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${CI:+5432}:5432
    volumes:
      - app_postgres_data:/var/lib/postgresql/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 3

  # port 6379
  redis:
    # NOTE you'll probably need to drop this value for your production environment which will lag edge releases
    image: redis:8
    restart: unless-stopped
    ports:
      - ${CI:+6379}:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 2s
      timeout: 5s
      retries: 3

  # SMTP sinkhole for easily viewing email in development
  # web ui: 8025
  # smtp: 1025
  mailpit:
    image: axllent/mailpit
    restart: unless-stopped
    ports:
      - ${CI:+1025}:1025
    volumes:
      - mailpit_data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

volumes:
  mailpit_data:
  # NOTE redis data is not persisted, assumed to be ephemeral
  app_postgres_data:
